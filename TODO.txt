TODO LIST for FRAME3DD
----------------------

* Dynamic time-history analysis with the HHT-alpha method

* Compute reactions forces along with joint displacements in solve_system funcion.  

* Consistent mass matrix including the effects of shear deformation on rotatory inertia

* Create structs to contain frame attributes, coordinates, etc, in order to migrate to a more object-oriented coding style, and simplify the passing of parameters to functions.

* Improve rigid joint offset method

* Member end joint releases
Implment end_release function in frame3dd.c into the code to 
carry out member end release.

* Implement import of Microstran .arc format. We can already parse these files
(including many constructs that aren't supported by FRAME3DD)
but we can not yet actually calculate using the parsed data.

* Fix rendering of members with offsets specified in local coordinates
(ie MOFF LO statements).

* Spectral modal superposition

* Linearly tapered beam elements 

* Convert 'save_matrix' to output files in Matrix Market format for easier
import into other programs.
http://math.nist.gov/MatrixMarket/

* Consider making use of third-party matrix routines, rather to providing them ourselves. Good options would be UMFPACK (for sparse matrices) or LAPACK (dense).  There would be assumed to be some efficiency improvements as a result of this
also, particularly if sparse matrix methods can be used.



COMPLETED ITEMS
------------------

* Add gravity load option via gravitational acceleration vector (Dec 3 2009)

* Specify element density along with elastic modulus and shear modulus in the
Frame Element Data section of the Input Data file  (Dec 3 2009)

* Add nX variables for number of beams with eXtra mass,
... redefine the entry of extra beam mass in a way that is similar
to extra joint inertia.  (Dec 3 2009)

* Separate exaggeration factors for static and dynamic meshes (Dec 2 2009)

* Check return values of fscanf functions and report errors to user
  for input data debugging purposes. (Oct 26 2009)

* Implement command line parsing using the getopt function (Mar 4 2009)
  ... for reasons of ease-of-portability

* Implement command line parsing using the argtable2 package (Mar 3 2009)

* Implement trapezoidally-distributed loads existing over only partial member lengths (Feb 26 2009)  

* Separate Input data and Output data files (Feb 9 2009)

* Migrate website to sf.net (Jan 2009)

* Add support for .CSV input and output. (Jan 1 2009)

* Change types values that are read from input files from double to float
(Dec 31 2008)

* Added support for separate prescribed displacements for each load case individually.  (Dec 30 2008)

* Added comments to describe variables in src/*.h files.  (Dec 30 2008)

----------------------------------------------------------------------------
