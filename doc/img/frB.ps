%!PS-Adobe-2.0
%%Title: my-plot.ps
%%Creator: gnuplot 3.8h patchlevel 0
%%CreationDate: Tue Dec 10 17:32:46 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 410
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -26 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 80 scalefont setfont
1.000 UL
LTb
2520 3447 M
[ [(Helvetica) 80.0 0.0 true true 0 (frB.txt     mode 1     1.816581 Hz)]
] -26.7 MCshow
0.500 UP
0.500 UP
1.000 UL
LT4
2520 2943 M
1106 1949 L
2520 2943 Circle
1106 1949 Circle
0.500 UP
1.000 UL
LT4
2520 2943 M
1880 1608 L
2520 2943 Circle
1880 1608 Circle
0.500 UP
1.000 UL
LT4
2520 2943 M
3933 1771 L
2520 2943 Circle
3933 1771 Circle
0.500 UP
1.000 UL
LT4
2520 2943 M
639 -832 V
2520 2943 Circle
3159 2111 Circle
2.000 UL
LT2
2520 2943 M
2295 2826 L
2106 2716 L
1945 2612 L
-138 -99 V
-122 -95 V
-112 -93 V
-108 -92 V
-109 -93 V
-118 -94 V
-132 -97 V
2.000 UL
LT2
2520 2943 M
63 -135 V
10 -134 V
-34 -134 V
-69 -134 V
-93 -133 V
2287 2140 L
2171 2007 L
2059 1874 L
1958 1741 L
-78 -133 V
2.000 UL
LT2
2520 2943 M
224 -99 V
189 -107 V
161 -113 V
138 -118 V
122 -121 V
112 -124 V
108 -124 V
109 -125 V
118 -122 V
132 -119 V
2.000 UL
LT2
2520 2943 M
-64 -82 V
-10 -82 V
34 -83 V
69 -83 V
93 -83 V
110 -84 V
116 -84 V
112 -84 V
101 -83 V
78 -84 V
1.000 UL
LTb
LTb
896 1117 M
62 7 V
1.000 UL
LTb
848 1107 M
[ [(Helvetica) 80.0 0.0 true true 0 (-150)]
] -26.7 MRshow
1.000 UL
LTb
LTb
3176 1297 M
-63 -7 V
1.000 UL
LTb
LTb
1057 1046 M
63 7 V
1.000 UL
LTb
1010 1036 M
[ [(Helvetica) 80.0 0.0 true true 0 (-100)]
] -26.7 MRshow
1.000 UL
LTb
LTb
3337 1226 M
-62 -7 V
1.000 UL
LTb
LTb
1219 975 M
62 7 V
1.000 UL
LTb
1171 965 M
[ [(Helvetica) 80.0 0.0 true true 0 (-50)]
] -26.7 MRshow
1.000 UL
LTb
LTb
3499 1155 M
-63 -7 V
1.000 UL
LTb
LTb
1380 904 M
63 7 V
1.000 UL
LTb
1332 894 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 0)]
] -26.7 MRshow
1.000 UL
LTb
LTb
3660 1084 M
-63 -7 V
1.000 UL
LTb
LTb
1541 833 M
63 7 V
1.000 UL
LTb
1494 823 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 50)]
] -26.7 MRshow
1.000 UL
LTb
LTb
3821 1013 M
-62 -7 V
1.000 UL
LTb
LTb
1703 762 M
62 7 V
1.000 UL
LTb
1655 752 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 100)]
] -26.7 MRshow
1.000 UL
LTb
LTb
3983 942 M
-63 -7 V
1.000 UL
LTb
LTb
1864 691 M
63 7 V
1.000 UL
LTb
1816 681 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 150)]
] -26.7 MRshow
1.000 UL
LTb
LTb
4144 871 M
-62 -7 V
 stroke
810 858 M
[ [(Helvetica) 80.0 0.0 true true 0 (x)]
] -26.7 MCshow
1.000 UL
LTb
LTb
1864 691 M
-53 34 V
 stroke
1904 647 M
[ [(Helvetica) 80.0 0.0 true true 0 (-100)]
] -26.7 MCshow
1.000 UL
LTb
LTb
896 1117 M
53 -35 V
1.000 UL
LTb
LTb
2092 709 M
-53 34 V
 stroke
2132 665 M
[ [(Helvetica) 80.0 0.0 true true 0 (-80)]
] -26.7 MCshow
1.000 UL
LTb
LTb
1124 1135 M
53 -35 V
1.000 UL
LTb
LTb
2320 727 M
-53 34 V
 stroke
2361 683 M
[ [(Helvetica) 80.0 0.0 true true 0 (-60)]
] -26.7 MCshow
1.000 UL
LTb
LTb
1352 1153 M
53 -35 V
1.000 UL
LTb
LTb
2547 745 M
-51 34 V
 stroke
2588 701 M
[ [(Helvetica) 80.0 0.0 true true 0 (-40)]
] -26.7 MCshow
1.000 UL
LTb
LTb
1580 1171 M
53 -35 V
1.000 UL
LTb
LTb
2776 763 M
-53 34 V
 stroke
2816 719 M
[ [(Helvetica) 80.0 0.0 true true 0 (-20)]
] -26.7 MCshow
1.000 UL
LTb
LTb
1808 1189 M
53 -35 V
1.000 UL
LTb
LTb
3004 781 M
-53 34 V
 stroke
3044 738 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 0)]
] -26.7 MCshow
1.000 UL
LTb
LTb
2036 1207 M
53 -34 V
1.000 UL
LTb
LTb
3232 799 M
-53 34 V
 stroke
3272 756 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 20)]
] -26.7 MCshow
1.000 UL
LTb
LTb
2264 1225 M
53 -34 V
1.000 UL
LTb
LTb
3460 817 M
-53 35 V
 stroke
3500 774 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 40)]
] -26.7 MCshow
1.000 UL
LTb
LTb
2493 1243 M
51 -34 V
1.000 UL
LTb
LTb
3688 835 M
-53 35 V
 stroke
3728 792 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 60)]
] -26.7 MCshow
1.000 UL
LTb
LTb
2720 1261 M
53 -34 V
1.000 UL
LTb
LTb
3916 853 M
-53 35 V
 stroke
3956 810 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 80)]
] -26.7 MCshow
1.000 UL
LTb
LTb
2948 1279 M
53 -34 V
1.000 UL
LTb
LTb
4144 871 M
-53 35 V
 stroke
4184 828 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 100)]
] -26.7 MCshow
1.000 UL
LTb
LTb
3176 1297 M
53 -34 V
 stroke
3246 675 M
[ [(Helvetica) 80.0 0.0 true true 0 (y)]
] -26.7 MCshow
1.000 UL
LTb
LTb
896 1767 M
63 0 V
 stroke
770 1767 M
[ [(Helvetica) 80.0 0.0 true true 0 (-20)]
] -26.7 MRshow
1.000 UL
LTb
LTb
896 1982 M
63 0 V
 stroke
770 1982 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 0)]
] -26.7 MRshow
1.000 UL
LTb
LTb
896 2199 M
63 0 V
 stroke
770 2199 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 20)]
] -26.7 MRshow
1.000 UL
LTb
LTb
896 2416 M
63 0 V
 stroke
770 2416 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 40)]
] -26.7 MRshow
1.000 UL
LTb
LTb
896 2632 M
63 0 V
 stroke
770 2632 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 60)]
] -26.7 MRshow
1.000 UL
LTb
LTb
896 2849 M
63 0 V
 stroke
770 2849 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 80)]
] -26.7 MRshow
1.000 UL
LTb
LTb
896 3066 M
63 0 V
 stroke
770 3066 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 100)]
] -26.7 MRshow
895 3553 M
[ [(Helvetica) 80.0 0.0 true true 0 (z)]
] -26.7 MCshow
0.500 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
